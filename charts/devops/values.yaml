jenkins:
  enabled: true
  Master:
#    Image: jenkins/jenkins
#    ImageTag: alpine
#    UseSecurity: false
    AdminUser: admin
    AdminPassword: password
    ServiceType: NodePort
    HostName: jenkins-devops.apps.opspresso.com
    InstallPlugins:
      - git:latest
      - kubernetes:latest
      - workflow-job:latest
      - workflow-aggregator:latest
      - credentials-binding:latest
    Jobs: |-
      build-command: |-
        <?xml version='1.0' encoding='UTF-8'?>
        <flow-definition plugin="workflow-job@2.23">
          <actions/>
          <description></description>
          <keepDependencies>false</keepDependencies>
          <properties>
            <hudson.model.ParametersDefinitionProperty>
              <parameterDefinitions>
                <hudson.model.StringParameterDefinition>
                  <name>EXECUTOR_IMAGE</name>
                  <description></description>
                  <defaultValue>nalbam/builder:python</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>REPOSITORY_URL</name>
                  <description></description>
                  <defaultValue>https://github.com/nalbam/sample-web</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>BRANCH</name>
                  <description></description>
                  <defaultValue>master</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>COMMAND</name>
                  <description></description>
                  <defaultValue>whoami && pwd && ls -al</defaultValue>
                </hudson.model.StringParameterDefinition>
              </parameterDefinitions>
            </hudson.model.ParametersDefinitionProperty>
            <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
              <triggers/>
            </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
          </properties>
          <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.54">
            <script>def label = &quot;worker-${UUID.randomUUID().toString()}&quot;
        properties([
          buildDiscarder(logRotator(daysToKeepStr: &quot;60&quot;, numToKeepStr: &quot;10&quot;))
        ])
        podTemplate(label: label, containers: [
          containerTemplate(name: &quot;executor&quot;, image: &quot;$EXECUTOR_IMAGE&quot;, command: &quot;cat&quot;, ttyEnabled: true),
          containerTemplate(name: &quot;builder&quot;, image: &quot;nalbam/builder:latest&quot;, command: &quot;cat&quot;, ttyEnabled: true),
          containerTemplate(name: &quot;docker&quot;, image: &quot;docker&quot;, command: &quot;cat&quot;, ttyEnabled: true)
        ],
        volumes: [
          hostPathVolume(mountPath: &quot;/var/run/docker.sock&quot;, hostPath: &quot;/var/run/docker.sock&quot;)
        ]) {
          node(label) {
            stage(&quot;Checkout&quot;) {
              checkout([$class: &quot;GitSCM&quot;,
                branches: [[name: &quot;$BRANCH&quot;]],
                doGenerateSubmoduleConfigurations: false,
                extensions: [],
                submoduleCfg: [],
                userRemoteConfigs: [[url: &quot;$REPOSITORY_URL&quot;]]]
              )
            }
            stage(&quot;Command&quot;) {
              container(&quot;executor&quot;) {
                sh &quot;&quot;&quot;
                  $COMMAND
                &quot;&quot;&quot;
              }
            }
          }
        }
            </script>
            <sandbox>true</sandbox>
          </definition>
          <triggers/>
          <disabled>false</disabled>
        </flow-definition>
      build-image: |-
        <?xml version='1.0' encoding='UTF-8'?>
        <flow-definition plugin="workflow-job@2.23">
          <actions/>
          <description></description>
          <keepDependencies>false</keepDependencies>
          <properties>
            <hudson.model.ParametersDefinitionProperty>
              <parameterDefinitions>
                <hudson.model.StringParameterDefinition>
                  <name>REPOSITORY_URL</name>
                  <description></description>
                  <defaultValue>https://github.com/nalbam/sample-node</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>BRANCH</name>
                  <description></description>
                  <defaultValue>master</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>IMAGE_REPO</name>
                  <description></description>
                  <defaultValue>registry-devops.apps.opspresso.com/sample</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>IMAGE_NAME</name>
                  <description></description>
                  <defaultValue>sample-node</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>IMAGE_TAG</name>
                  <description></description>
                  <defaultValue>latest</defaultValue>
                </hudson.model.StringParameterDefinition>
              </parameterDefinitions>
            </hudson.model.ParametersDefinitionProperty>
            <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
              <triggers/>
            </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
          </properties>
          <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.54">
            <script>def label = &quot;worker-${UUID.randomUUID().toString()}&quot;
        properties([
          buildDiscarder(logRotator(daysToKeepStr: &quot;60&quot;, numToKeepStr: &quot;10&quot;))
        ])
        podTemplate(label: label, containers: [
          containerTemplate(name: &quot;builder&quot;, image: &quot;nalbam/builder:latest&quot;, command: &quot;cat&quot;, ttyEnabled: true),
          containerTemplate(name: &quot;docker&quot;, image: &quot;docker&quot;, command: &quot;cat&quot;, ttyEnabled: true)
        ],
        volumes: [
          hostPathVolume(mountPath: &quot;/var/run/docker.sock&quot;, hostPath: &quot;/var/run/docker.sock&quot;)
        ]) {
          node(label) {
            stage(&quot;Checkout&quot;) {
              checkout([$class: &quot;GitSCM&quot;,
                branches: [[name: &quot;$BRANCH&quot;]],
                doGenerateSubmoduleConfigurations: false,
                extensions: [],
                submoduleCfg: [],
                userRemoteConfigs: [[url: &quot;$REPOSITORY_URL&quot;]]]
              )
            }
            stage(&quot;Build Image&quot;) {
              container(&quot;docker&quot;) {
                sh &quot;&quot;&quot;
                  docker build -t $IMAGE_REPO/$IMAGE_NAME:$IMAGE_TAG .
                &quot;&quot;&quot;
              }
            }
            stage(&quot;Push Image&quot;) {
              container(&quot;docker&quot;) {
                sh &quot;&quot;&quot;
                  docker push $IMAGE_REPO/$IMAGE_NAME:$IMAGE_TAG
                &quot;&quot;&quot;
              }
            }
          }
        }
            </script>
            <sandbox>true</sandbox>
          </definition>
          <triggers/>
          <disabled>false</disabled>
        </flow-definition>
      build-maven: |-
        <?xml version='1.0' encoding='UTF-8'?>
        <flow-definition plugin="workflow-job@2.23">
          <actions/>
          <description></description>
          <keepDependencies>false</keepDependencies>
          <properties>
            <hudson.model.ParametersDefinitionProperty>
              <parameterDefinitions>
                <hudson.model.StringParameterDefinition>
                  <name>EXECUTOR_IMAGE</name>
                  <description></description>
                  <defaultValue>nalbam/builder:maven</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>REPOSITORY_URL</name>
                  <description></description>
                  <defaultValue>https://github.com/nalbam/sample-spring</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>BRANCH</name>
                  <description></description>
                  <defaultValue>master</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>BUILD</name>
                  <description></description>
                  <defaultValue>mvn package -DskipTests</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>TEST</name>
                  <description></description>
                  <defaultValue>mvn test</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>IMAGE_REPO</name>
                  <description></description>
                  <defaultValue>registry-devops.apps.opspresso.com/sample</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>IMAGE_NAME</name>
                  <description></description>
                  <defaultValue>sample-spring</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>IMAGE_TAG</name>
                  <description></description>
                  <defaultValue>latest</defaultValue>
                </hudson.model.StringParameterDefinition>
              </parameterDefinitions>
            </hudson.model.ParametersDefinitionProperty>
            <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
              <triggers/>
            </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
          </properties>
          <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.54">
            <script>def label = &quot;worker-${UUID.randomUUID().toString()}&quot;
        properties([
          buildDiscarder(logRotator(daysToKeepStr: &quot;60&quot;, numToKeepStr: &quot;10&quot;))
        ])
        podTemplate(label: label, containers: [
          containerTemplate(name: &quot;executor&quot;, image: &quot;$EXECUTOR_IMAGE&quot;, command: &quot;cat&quot;, ttyEnabled: true),
          containerTemplate(name: &quot;builder&quot;, image: &quot;nalbam/builder:latest&quot;, command: &quot;cat&quot;, ttyEnabled: true),
          containerTemplate(name: &quot;docker&quot;, image: &quot;docker&quot;, command: &quot;cat&quot;, ttyEnabled: true)
        ],
        volumes: [
          hostPathVolume(mountPath: &quot;/var/run/docker.sock&quot;, hostPath: &quot;/var/run/docker.sock&quot;)
        ]) {
          node(label) {
            stage(&quot;Checkout&quot;) {
              checkout([$class: &quot;GitSCM&quot;,
                branches: [[name: &quot;$BRANCH&quot;]],
                doGenerateSubmoduleConfigurations: false,
                extensions: [],
                submoduleCfg: [],
                userRemoteConfigs: [[url: &quot;$REPOSITORY_URL&quot;]]]
              )
            }
            stage(&quot;Build&quot;) {
              container(&quot;executor&quot;) {
                sh &quot;&quot;&quot;
                  $BUILD
                &quot;&quot;&quot;
              }
            }
            stage(&quot;Test&quot;) {
              container(&quot;executor&quot;) {
                sh &quot;&quot;&quot;
                  $TEST
                &quot;&quot;&quot;
              }
            }
            stage(&quot;Result&quot;) {
              junit &quot;**/target/surefire-reports/TEST-*.xml&quot;
              archive &quot;target/*.jar&quot;
              sh &quot;cp -rf target/*.jar ROOT.jar&quot;
            }
            stage(&quot;Build Image&quot;) {
              container(&quot;docker&quot;) {
                sh &quot;&quot;&quot;
                  docker build -t $IMAGE_REPO/$IMAGE_NAME:$IMAGE_TAG .
                &quot;&quot;&quot;
              }
            }
            stage(&quot;Push Image&quot;) {
              container(&quot;docker&quot;) {
                sh &quot;&quot;&quot;
                  docker push $IMAGE_REPO/$IMAGE_NAME:$IMAGE_TAG
                &quot;&quot;&quot;
              }
            }
          }
        }
            </script>
            <sandbox>true</sandbox>
          </definition>
          <triggers/>
          <disabled>false</disabled>
        </flow-definition>
      deploy-image: |-
        <?xml version='1.0' encoding='UTF-8'?>
        <flow-definition plugin="workflow-job@2.23">
          <actions/>
          <description></description>
          <keepDependencies>false</keepDependencies>
          <properties>
            <hudson.model.ParametersDefinitionProperty>
              <parameterDefinitions>
                <hudson.model.StringParameterDefinition>
                  <name>IMAGE_REPO</name>
                  <description></description>
                  <defaultValue>registry-devops.apps.opspresso.com/sample</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>IMAGE_NAME</name>
                  <description></description>
                  <defaultValue>sample-node</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>IMAGE_TAG</name>
                  <description></description>
                  <defaultValue>latest</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>NAMESPACE</name>
                  <description></description>
                  <defaultValue>default</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>DEPLOY_NAME</name>
                  <description></description>
                  <defaultValue>sample-node</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>REPLICAS</name>
                  <description></description>
                  <defaultValue>1</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>SERVICE_TYPE</name>
                  <description></description>
                  <defaultValue>NodePort</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>CONTANER_PORT</name>
                  <description></description>
                  <defaultValue>3000</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>SERVICE_PORT</name>
                  <description></description>
                  <defaultValue>80</defaultValue>
                </hudson.model.StringParameterDefinition>
              </parameterDefinitions>
            </hudson.model.ParametersDefinitionProperty>
            <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
              <triggers/>
            </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
          </properties>
          <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.54">
            <script>def label = &quot;worker-${UUID.randomUUID().toString()}&quot;
        properties([
          buildDiscarder(logRotator(daysToKeepStr: &quot;60&quot;, numToKeepStr: &quot;10&quot;))
        ])
        podTemplate(label: label, containers: [
          containerTemplate(name: &quot;builder&quot;, image: &quot;nalbam/builder:latest&quot;, command: &quot;cat&quot;, ttyEnabled: true),
          containerTemplate(name: &quot;docker&quot;, image: &quot;docker&quot;, command: &quot;cat&quot;, ttyEnabled: true)
        ],
        volumes: [
          hostPathVolume(mountPath: &quot;/var/run/docker.sock&quot;, hostPath: &quot;/var/run/docker.sock&quot;)
        ]) {
          node(label) {
            stage(&quot;Pull Image&quot;) {
              container(&quot;docker&quot;) {
                sh &quot;&quot;&quot;
                  docker pull $IMAGE_REPO/$IMAGE_NAME:$IMAGE_TAG
                &quot;&quot;&quot;
              }
            }
          }
        }
            </script>
            <sandbox>true</sandbox>
          </definition>
          <triggers/>
          <disabled>false</disabled>
        </flow-definition>
      run-command: |-
        <?xml version='1.0' encoding='UTF-8'?>
        <flow-definition plugin="workflow-job@2.23">
          <actions/>
          <description></description>
          <keepDependencies>false</keepDependencies>
          <properties>
            <hudson.model.ParametersDefinitionProperty>
              <parameterDefinitions>
                <hudson.model.StringParameterDefinition>
                  <name>EXECUTOR_IMAGE</name>
                  <description></description>
                  <defaultValue>nalbam/builder:latest</defaultValue>
                </hudson.model.StringParameterDefinition>
                <hudson.model.StringParameterDefinition>
                  <name>COMMAND</name>
                  <description></description>
                  <defaultValue>kubectl get all --all-namespaces</defaultValue>
                </hudson.model.StringParameterDefinition>
              </parameterDefinitions>
            </hudson.model.ParametersDefinitionProperty>
            <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
              <triggers/>
            </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
          </properties>
          <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.54">
            <script>def label = &quot;worker-${UUID.randomUUID().toString()}&quot;
        properties([
          buildDiscarder(logRotator(daysToKeepStr: &quot;60&quot;, numToKeepStr: &quot;10&quot;))
        ])
        podTemplate(label: label, containers: [
          containerTemplate(name: &quot;executor&quot;, image: &quot;$EXECUTOR_IMAGE&quot;, command: &quot;cat&quot;, ttyEnabled: true)
        ],
        volumes: [
          hostPathVolume(mountPath: &quot;/var/run/docker.sock&quot;, hostPath: &quot;/var/run/docker.sock&quot;)
        ]) {
          node(label) {
            stage(&quot;Command&quot;) {
              container(&quot;executor&quot;) {
                sh &quot;&quot;&quot;
                  $COMMAND
                &quot;&quot;&quot;
              }
            }
          }
        }
            </script>
            <sandbox>true</sandbox>
          </definition>
          <triggers/>
          <disabled>false</disabled>
        </flow-definition>
      sample: |-
        <?xml version='1.0' encoding='UTF-8'?>
        <flow-definition plugin="workflow-job@2.23">
          <actions/>
          <description></description>
          <keepDependencies>false</keepDependencies>
          <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.54">
            <script>def label = &quot;worker-${UUID.randomUUID().toString()}&quot;
        properties([
          buildDiscarder(logRotator(daysToKeepStr: &quot;60&quot;, numToKeepStr: &quot;10&quot;))
        ])
        podTemplate(label: label, containers: [
          containerTemplate(name: &quot;builder&quot;, image: &quot;nalbam/builder:latest&quot;, command: &quot;cat&quot;, ttyEnabled: true),
          containerTemplate(name: &quot;docker&quot;, image: &quot;docker&quot;, command: &quot;cat&quot;, ttyEnabled: true)
        ],
        volumes: [
          hostPathVolume(mountPath: &quot;/var/run/docker.sock&quot;, hostPath: &quot;/var/run/docker.sock&quot;)
        ]) {
          node(label) {
            stage(&quot;Info&quot;) {
              sh &quot;uname -a&quot;
            }
            stage(&quot;Run docker&quot;) {
              container(&quot;docker&quot;) {
                sh &quot;&quot;&quot;
                  docker images
                  docker ps
                &quot;&quot;&quot;
              }
            }
            stage(&quot;Run kubectl&quot;) {
              container(&quot;builder&quot;) {
                sh &quot;&quot;&quot;
                  kubectl version --client --short
                  kubectl get pod,svc,ing
                &quot;&quot;&quot;
              }
            }
            stage(&quot;Run helm&quot;) {
              container(&quot;builder&quot;) {
                sh &quot;&quot;&quot;
                  helm version --client --short
                  helm list
                &quot;&quot;&quot;
              }
            }
            stage(&quot;Run draft&quot;) {
              container(&quot;builder&quot;) {
                sh &quot;&quot;&quot;
                  draft version --short
                &quot;&quot;&quot;
              }
            }
          }
        }
            </script>
            <sandbox>true</sandbox>
          </definition>
          <triggers/>
          <disabled>false</disabled>
        </flow-definition>
#    CustomConfigMap: true
#  Agent:
#    Enabled: true
#    Image: jenkins/jnlp-slave
#    ImageTag: alpine
#    AlwaysPullImage: true
  rbac:
    install: true

sonatype-nexus:
  enabled: true
#  nexus:
#    imageName: quay.io/travelaudience/docker-nexus
#    imageTag: 3.12.1
  nexusProxy:
    env:
      nexusHttpHost: nexus-devops.apps.opspresso.com
      nexusDockerHost: nexus-docker-devops.apps.opspresso.com
  ingress:
    enabled: true
    tls:
      enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 500m
      ingress.kubernetes.io/proxy-body-size: 500m

docker-registry:
  enabled: true
#  image:
#    repository: registry
#    tag: latest
  ingress:
    enabled: true
    hosts:
      - registry-devops.apps.opspresso.com
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 500m
      ingress.kubernetes.io/proxy-body-size: 500m

chartmuseum:
  enabled: true
#  image:
#    repository: chartmuseum/chartmuseum
#    tag: v0.7.1
