# ------------------- Deployment ------------------- #

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-web
  namespace: default
  labels:
    app: sample-web
spec:
  replicas: 2
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
  selector:
    matchLabels:
      k8s-app: sample-web
  template:
    metadata:
      labels:
        k8s-app: sample-web
    spec:
      containers:
      - name: sample-web
        image: nalbam/sample-web:alpine
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          timeoutSeconds: 3
          periodSeconds: 15
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---
# ------------------- Service ------------------- #

apiVersion: v1
kind: Service
metadata:
  name: sample-web
  namespace: default
  labels:
    app: sample-web
    dns: route53
  annotations:
    domainName: "sample-web.apps.nalbam.com"
    #service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    #service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "{{SSL_CERT_ARN}}"
    #service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 80
  selector:
    k8s-app: sample-web

---
# ------------------- HorizontalPodAutoscaler ------------------- #

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: sample-web
  namespace: default
  labels:
    app: sample-web
spec:
  scaleTargetRef:
    kind: Deployment
    name: sample-web
    apiVersion: apps/v1
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 50
