apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: ci-node-
spec:
  entrypoint: ci-node
  arguments:
    parameters:
      - name: name
        value: sample-node
      - name: repo
        value: https://github.com/nalbam/sample-node.git
      - name: revision
        value: master
  volumeClaimTemplates:
    - metadata:
        name: workdir
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi

  templates:
    - name: ci-node
      inputs:
        parameters:
          - name: name
          - name: repo
          - name: revision
      steps:
        - - name: build
            template: run-build
            arguments:
              parameters:
                - name: name
                  value: "{{inputs.parameters.name}}"
                - name: repo
                  value: "{{inputs.parameters.repo}}"
                - name: revision
                  value: "{{inputs.parameters.revision}}"
        # - - name: test
        #     template: run-test
        #     arguments:
        #       parameters:
        #         - name: os-image
        #           value: "{{item.image}}:{{item.tag}}"
        #     withItems:
        #       - { image: "debian", tag: "9.1" }
        #       - { image: "alpine", tag: "3.6" }
        #       - { image: "ubuntu", tag: "17.10" }

    - name: run-build
      inputs:
        parameters:
          - name: revision
        artifacts:
          - name: code
            path: /src
            git:
              repo: "{{inputs.parameters.repo}}"
              revision: "{{inputs.parameters.revision}}"
      container:
        image: node:12
        command: [sh, -c]
        args: [
            "
            cd /src/{{inputs.parameters.name}} &&
            git status &&
            npm run build
            ",
          ]
        volumeMounts:
          - name: workdir
            mountPath: /src
    # - name: run-test
    #   inputs:
    #     parameters:
    #       - name: os-image
    #   container:
    #     image: "{{inputs.parameters.os-image}}"
    #     command: [sh, -c]
    #     args: [
    #         "
    #         uname -a ;
    #         cat /etc/os-release ;
    #         /go/src/github.com/golang/example/hello/hello
    #         ",
    #       ]
    #     volumeMounts:
    #       - name: workdir
    #         mountPath: /src
